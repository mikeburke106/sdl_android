package com.smartdevicelink.proxy.rpc;

import java.util.ArrayList;
import java.util.List;

import org.json.JSONObject;

import com.smartdevicelink.protocol.enums.FunctionID;
import com.smartdevicelink.proxy.RPCRequest;
import com.smartdevicelink.proxy.rpc.enums.GlobalProperty;
import com.smartdevicelink.proxy.rpc.enums.SdlCommand;
import com.smartdevicelink.util.JsonUtils;
/**
 * Resets the passed global properties to their default values as defined by
 * SDL
 * <p>
 * The HELPPROMPT global property default value is generated by SDL consists of
 * the first vrCommand of each Command Menu item defined at the moment PTT is
 * pressed<br/>
 * The TIMEOUTPROMPT global property default value is the same as the HELPPROMPT
 * global property default value
 * <p>
 * <b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b>
 * </p>
 * 
 * @since SmartDeviceLink 1.0
 * @see SetGlobalProperties
 */
public class ResetGlobalProperties extends RPCRequest {
	public static final String KEY_PROPERTIES = "properties";
	
	private List<String> properties; // represents GlobalProperty enum
	
	/**
	 * Constructs a new ResetGlobalProperties object
	 */
    public ResetGlobalProperties() {
        super(FunctionID.RESET_GLOBAL_PROPERTIES);
    }
    
    /**
     * Creates a ResetGlobalProperties object from a JSON object.
     * 
     * @param jsonObject The JSON object to read from
     */
    public ResetGlobalProperties(JSONObject jsonObject){
        super(SdlCommand.RESET_GLOBAL_PROPERTIES, jsonObject);
        jsonObject = getParameters(jsonObject);
        switch(sdlVersion){
        default:
            this.properties = JsonUtils.readStringListFromJsonObject(jsonObject, KEY_PROPERTIES);
            break;
        }
    }
    
	/**
	 * Gets an array of one or more GlobalProperty enumeration elements
	 * indicating which global properties to reset to their default value
	 * 
	 * @return List<GlobalProperty> -an array of one or more GlobalProperty
	 *         enumeration elements
	 */
    public List<GlobalProperty> getProperties() {
    	if(this.properties == null){
    	    return null;
    	}
    	
	    List<GlobalProperty> result = new ArrayList<GlobalProperty>(this.properties.size());
	    for(String str : this.properties){
	        result.add(GlobalProperty.valueForJsonName(str, sdlVersion));
	    }
	    return result;
    }
    
	/**
	 * Sets an array of one or more GlobalProperty enumeration elements
	 * indicating which global properties to reset to their default value
	 * 
	 * @param properties
	 *            a List<GlobalProperty> An array of one or more
	 *            GlobalProperty enumeration elements indicating which global
	 *            properties to reset to their default value
	 *            <p>
	 *            <b>Notes: </b>Array must have at least one element
	 */    
    public void setProperties( List<GlobalProperty> properties ) {
        if(properties == null){
            this.properties = null;
        }
        else{
            this.properties = new ArrayList<String>(properties.size());
            for(GlobalProperty item : properties){
                this.properties.add(item.getJsonName(sdlVersion));
            }
        }
    }
    
    @Override
    public JSONObject getJsonParameters(int sdlVersion){
        JSONObject result = super.getJsonParameters(sdlVersion);
        
        switch(sdlVersion){
        default:
            JsonUtils.addToJsonObject(result, KEY_PROPERTIES, (this.properties == null) ? null :
                    JsonUtils.createJsonArray(this.properties));
            break;
        }
        
        return result;
    }
}
